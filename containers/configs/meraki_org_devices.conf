# Adds meta data to the event.
# [@metadata][azure_event_hubs][name] - the name of the event host
# [@metadata][azure_event_hubs][consumer_group] - the consumer group that consumed this event
# [@metadata][azure_event_hubs][processor_host] - the unique identifier that identifies which host processed this event. Note - there can be multiple processor hosts on a single instance of Logstash.
# [@metadata][azure_event_hubs][partition] - the partition from which event came from
# [@metadata][azure_event_hubs][offset] - the event hub offset for this event
# [@metadata][azure_event_hubs][sequence] - the event hub sequence for this event
# [@metadata][azure_event_hubs][timestamp] - the enqueued time of the event
# [@metadata][azure_event_hubs][event_size] - the size of the event

input {
  azure_event_hubs {
    threads => 8
    decorate_events => true
    event_hub_connections => ["Endpoint=sb://sentinel-prod-eastus.servicebus.windows.net/;SharedAccessKeyName=consumer;SharedAccessKey=;EntityPath=merakiorgdevices"]
    storage_connection => "DefaultEndpointsProtocol=https;AccountName=slackauditlogs;AccountKey=;EndpointSuffix=core.windows.net"
  }
}

filter {
  json {
    source => "message"
    target => "raw"
    remove_field => ["message"]
  }
  if ![raw][lanIp] {
    mutate {
      add_field => {
        "address" => "%{[raw][address]}"
        "configurationUpdatedAt" => "%{[raw][configurationUpdatedAt]}"
        "firmware" => "%{[raw][firmware]}"
        "lanIp" => "0.0.0.0"
        "lat" => "%{[raw][lat]}"
        "lng" => "%{[raw][lng]}"
        "mac" => "%{[raw][mac]}"
        "model" => "%{[raw][model]}"
        "name" => "%{[raw][name]}"
        "networkId" => "%{[raw][networkId]}"
        "notes" => "%{[raw][notes]}"
        "serial" => "%{[raw][serial]}"
        "tags" => "%{[raw][tags]}"
        "url" => "%{[raw][url]}"
      }
      remove_field => ["@version", "raw"]
    }
  } else {
    mutate {
      add_field => {
        "address" => "%{[raw][address]}"
        "configurationUpdatedAt" => "%{[raw][configurationUpdatedAt]}"
        "firmware" => "%{[raw][firmware]}"
        "lanIp" => "%{[raw][lanIp]}"
        "lat" => "%{[raw][lat]}"
        "lng" => "%{[raw][lng]}"
        "mac" => "%{[raw][mac]}"
        "model" => "%{[raw][model]}"
        "name" => "%{[raw][name]}"
        "networkId" => "%{[raw][networkId]}"
        "notes" => "%{[raw][notes]}"
        "serial" => "%{[raw][serial]}"
        "tags" => "%{[raw][tags]}"
        "url" => "%{[raw][url]}"
      }
      remove_field => ["@version", "raw"]
    }
  }
}

output {
  azure_loganalytics {
    customer_id => ""
    shared_key => ""
    log_type => "merakiorgdevices"
    key_names => ["address", "configurationUpdatedAt", "firmware", "lanIp", "lat", "lng", "mac", "model", "name", "networkId", "notes", "serial", "tags", "url"]
    flush_items => 50
    flush_interval_time => 5
  }
}