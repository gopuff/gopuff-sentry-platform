# Adds meta data to the event.
# [@metadata][azure_event_hubs][name] - the name of the event host
# [@metadata][azure_event_hubs][consumer_group] - the consumer group that consumed this event
# [@metadata][azure_event_hubs][processor_host] - the unique identifier that identifies which host processed this event. Note - there can be multiple processor hosts on a single instance of Logstash.
# [@metadata][azure_event_hubs][partition] - the partition from which event came from
# [@metadata][azure_event_hubs][offset] - the event hub offset for this event
# [@metadata][azure_event_hubs][sequence] - the event hub sequence for this event
# [@metadata][azure_event_hubs][timestamp] - the enqueued time of the event
# [@metadata][azure_event_hubs][event_size] - the size of the event

input {
  azure_event_hubs {
    threads => 8
    decorate_events => true
    event_hub_connections => ["Endpoint=sb://sentinel-prod-eastus.servicebus.windows.net/;SharedAccessKeyName=consumer;SharedAccessKey=;EntityPath=merakideviceips"]
    storage_connection => "DefaultEndpointsProtocol=https;AccountName=slackauditlogs;AccountKey=;EndpointSuffix=core.windows.net"
  }
}

filter {
  json {
    source => "message"
    target => "raw"
    remove_field => ["message"]
  }
  mutate {
    add_field => {
      "dns" => "%{[raw][dns]}"
      "gateway" => "%{[raw][gateway]}"
      "interface" => "%{[raw][interface]}"
      "lanIp" => "%{[raw][ip]}"
      "publicIp" => "%{[raw][publicIp]}"
      "status" => "%{[raw][status]}"
      "usingStaticIp" => "%{[raw][usingStaticIp]}"
      "vlan" => "%{[raw][vlan]}"
    }
    remove_field => ["@version", "raw"]
  }
}

output {
  if "Active" in [status] {
    azure_loganalytics {
      customer_id => ""
      shared_key => ""
      log_type => "merakideviceips"
      key_names => ["dns", "gateway", "interface", "lanIp", "publicIp", "status", "usingStaticIp", "vlan"]
      flush_items => 50
      flush_interval_time => 5
    }
  }
}